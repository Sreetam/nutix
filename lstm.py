# -*- coding: utf-8 -*-
"""nutix.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AddjxanwbkQkqvDm7I8Ndeq4qM8TA7Vg
"""

import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
import tensorflow as tf
from sklearn.model_selection import train_test_split

df = pd.read_csv("https://raw.githubusercontent.com/Sreetam/nutix/main/commodities.csv")
df['date'] = pd.to_datetime(df[df.columns[0]])
df.drop(columns=df.columns[0], inplace=True)
df.set_index('date', inplace=True)

peanuts = np.array([df.peanut.values]).T
data_len = peanuts.shape[0]
peanuts.shape

features = []
labels = []
for i in range(60, data_len):
    features.append(peanuts[i-60:i, 0])
    labels.append(peanuts[i, 0])

features = np.array(features)
labels = np.array(labels)

features = np.reshape(features, (features.shape[0], features.shape[1], 1))

# X_train, X_test, y_train, y_test = train_test_split(features, labels, test_size=0.27)

model = tf.keras.models.Sequential([
    tf.keras.layers.LSTM(units = 25, return_sequences = True, input_shape = (features.shape[1], 1)),
    tf.keras.layers.Dropout(0.2),
    tf.keras.layers.LSTM(units = 25, return_sequences = True),
    tf.keras.layers.Dropout(0.2),
    tf.keras.layers.LSTM(units = 25, return_sequences = True),
    tf.keras.layers.Dropout(0.2),
    tf.keras.layers.LSTM(units = 25),
    tf.keras.layers.Dropout(0.2),
    tf.keras.layers.Dense(units = 1)
])
model.compile(optimizer = 'adam', loss = 'mean_squared_error')
history = model.fit(features, labels, epochs = 20, batch_size = 16, verbose = 1)

y_pred = model.predict(features)

plt.plot(labels)
plt.plot(y_pred)
plt.savefig("lstm.png")